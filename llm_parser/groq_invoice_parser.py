import os
import json
from openai import OpenAI
from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng t·ª´ .env
load_dotenv()

# Kh·ªüi t·∫°o client cho Groq API (OpenAI-style)
client = OpenAI(
    api_key=os.getenv("GROQ_API_KEY"),
    base_url="https://api.groq.com/openai/v1"
)

DEFAULT_MODEL = "llama3-8b-8192"

def parse_invoice_with_groq(ocr_text: str,
                            model: str = DEFAULT_MODEL) -> list[dict] | None:
    """
    G·ª≠i n·ªôi dung h√≥a ƒë∆°n OCR t·ªõi LLM ƒë·ªÉ tr√≠ch xu·∫•t b·∫£ng d·ªØ li·ªáu d·∫°ng JSON.
    K·∫øt qu·∫£ tr·∫£ v·ªÅ l√† list[dict] g·ªìm c√°c d√≤ng h√≥a ƒë∆°n.
    """

    system_prompt = (
        "B·∫°n l√† tr·ª£ l√Ω k·∫ø to√°n. H√£y ƒë·ªçc n·ªôi dung h√≥a ƒë∆°n sau v√† tr√≠ch xu·∫•t danh s√°ch d√≤ng h√†ng "
        "th√†nh m·∫£ng JSON theo m·∫´u:\n"
        "[\n"
        "  {\n"
        "    \"ten_hang\": \"T√™n h√†ng h√≥a\",\n"
        "    \"ma_hang\": \"M√£ h√†ng (n·∫øu c√≥)\",\n"
        "    \"don_vi\": \"ƒê∆°n v·ªã\",\n"
        "    \"so_luong\": 1,\n"
        "    \"don_gia\": 2000000,\n"
        "    \"thanh_tien\": 2000000,\n"
        "    \"ngay\": \"20/07/2030\"\n"
        "  }, ...\n"
        "]\n"
        "Ch·ªâ tr·∫£ v·ªÅ ƒë√∫ng JSON, kh√¥ng gi·∫£i th√≠ch th√™m. Kh√¥ng c√≥ k√Ω t·ª± th·ª´a tr∆∞·ªõc ho·∫∑c sau JSON."
    )

    try:
        # G·ªçi LLM m√† kh√¥ng √©p ki·ªÉu output
        response = client.chat.completions.create(
            model=model,
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": ocr_text}
            ],
            temperature=0.2
        )

        content = response.choices[0].message.content.strip()

        # T·ª± t√¨m ƒëo·∫°n JSON trong n·ªôi dung tr·∫£ v·ªÅ
        start = content.find("[")
        end = content.rfind("]") + 1
        json_text = content[start:end]

        # In ƒëo·∫°n JSON raw (debug)
        print("\n[üîç JSON Extracted Raw]:\n", json_text)

        # Parse JSON
        return json.loads(json_text)

    except json.JSONDecodeError:
        print("[‚ö†] Kh√¥ng parse ƒë∆∞·ª£c JSON t·ª´ k·∫øt qu·∫£ LLM.")
        return None

    except Exception as e:
        print(f"[‚ùå] L·ªói khi g·ªçi LLM ho·∫∑c x·ª≠ l√Ω k·∫øt qu·∫£: {e}")
        return None
